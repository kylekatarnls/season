name: Tests

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php: ['8.2', '8.3']
        setup: ['lowest', 'stable', 'next']

    name: PHP ${{ matrix.php }} - ${{ matrix.setup }}

    steps:
    - uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        tools: composer:v2

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-${{ matrix.setup }}-php-${{ matrix.php }}-${{ hashFiles('**/composer.json') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.setup }}-php-${{ matrix.php }}-

    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer update --prefer-dist ${{ matrix.setup != 'next' && format('--prefer-{0}', matrix.setup) || '' }} --no-progress --no-suggest

    - name: Code Climate Test Reporter
      if: matrix.php == '8.3' && matrix.setup == 'stable'
      uses: aktions/codeclimate-test-reporter@v1
      with:
        codeclimate-test-reporter-id: ${{ secrets.CC_TEST_REPORTER_ID }}
        command: after-build -t clover
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      continue-on-error: true

    - name: Run test suite
      run: |
        if [[ ${MATRIX_CONFIG} == "8.3-stable" ]]; then
          vendor/bin/phpunit --coverage-text --coverage-clover=clover.xml;
        else
          vendor/bin/phpunit --no-coverage;
        fi;
      env:
        MATRIX_CONFIG: ${{ matrix.php }}-${{ matrix.setup }}

    - name: Code Climate Test Reporter
      if: matrix.php == '8.3' && matrix.setup == 'stable'
      run: ./cc-test-reporter after-build --exit-code 0;
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

    - name: Coverage
      if: matrix.php == '8.3' && matrix.setup == 'stable'
      run: bash <(curl -s https://codecov.io/bash);
